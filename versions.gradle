/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.5.0-alpha06'
versions.kotlin = "1.3.21"
versions.navigation = "1.0.0-rc02"
versions.anko = "0.10.8"
versions.support_version = "1.0.0"
versions.arch_version = "2.1.0-alpha02"
versions.constraint_layout_version = "2.0.0-alpha2"
versions.junit_version = "4.13-beta-1"
versions.support_test_version = "1.0.2"
versions.room_version="2.1.0-alpha03"
versions.work_version = "1.0.0-rc02"
versions.globalCompileSdkVersion = 28
versions.globalMinSdkVersion = 24
versions.globalTargetSdkVersion = 25
versions.topsnackbar = "1.1.1"
versions.v4 = "1.0.0"
versions.appcompat = "1.0.2"
versions.room = "2.0.0"
versions.paging = "2.1.0"
versions.corektx = "1.0.1"
versions.retrofit2 = "2.5.0"
versions.okhttp3 = "3.12.1"
versions.gson = "2.8.5"
versions.gson_converter = "2.5.0"
versions.junit_local_test = "4.12"
versions.assertion_junit = "1.1.0"
versions.espresso_test = "3.1.1"
versions.test_rule = "1.1.2-alpha01"
versions.materialVersion = "1.1.0-alpha02"
versions.coroutineCore = "1.1.1"
versions.kotlin_coroutine_adapter = "0.9.2"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.support_annotations = "1.0.0"
versions.runner = "1.1.0"
versions.test_core = "1.0.0"
versions.mockito_core = "2.8.9"
versions.hamcrest_library = "2.1"
versions.assertion_truth = "1.0.0"
versions.assertion_google_truth = "0.42"
versions.espresso_contrib = "3.1.0"
versions.espresso_accessibilty = "3.1.0"
versions.espresso_web = "3.1.0"
versions.idling_concurrent = "3.1.0"
versions.espresso_idling_resource = "3.1.0"


deps.versions = versions

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"

//group kotlin libraries
def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

deps.kotlin = kotlin

//group anko libraries
def anko = [:]
anko.common = "org.jetbrains.anko:anko-commons:$versions.anko"
anko.design = "org.jetbrains.anko:anko-design:$versions.anko"
anko.coroutine = "org.jetbrains.anko:anko-coroutines:$versions.anko"

deps.anko = anko

//UI component libraries
def ui = [:]
ui.material_design = "com.google.android.material:material:$versions.materialVersion"
ui.cardview = "androidx.cardview:cardview:$versions.support_version"
ui.recyclerview = "androidx.recyclerview:recyclerview:$versions.support_version"
ui.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout_version"
ui.snackbar = "com.androidadvance:topsnackbar:$versions.topsnackbar"

deps.ui = ui

//Navigation component
def navigation = [:]
navigation.fragment = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ktx = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"

deps.navigation = navigation

//Architecture component
def architecture = [:]
architecture.lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime:$versions.arch_version"
architecture.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.arch_version"
architecture.lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:$versions.arch_version"
architecture.lifecycle_viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.arch_version"


deps.architecture = architecture

//Support libraries
def support = [:]
support.v4 = "androidx.legacy:legacy-support-v4:$versions.v4"
support.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"

deps.support = support

//Room
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room_version"
room.compiler = "androidx.room:room-compiler:$versions.room_version"
room.coroutine = "androidx.room:room-coroutines:$versions.room_version"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room_version"

deps.room = room

//Paging
def paging = [:]
paging.runtime = "androidx.paging:paging-runtime-ktx:$versions.paging"

deps.paging = paging

//Work manager
def work_manager = [:]
work_manager.runtime = "android.arch.work:work-runtime:$versions.work_version"

deps.work_manager = work_manager

//Core ktx
def core_ktx = [:]
core_ktx = "androidx.core:core-ktx:$versions.corektx"

deps.core_ktx = core_ktx

//Retrofit
def retrofit = [:]
retrofit.retrofit2 = "com.squareup.retrofit2:retrofit:$versions.retrofit2"
retrofit.okhttp3 = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
retrofit.kotlin_coroutine_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.kotlin_coroutine_adapter"

deps.retrofit = retrofit

//Json parsing
def json = [:]
json.gson = "com.google.code.gson:gson:$versions.gson"
json.converter = "com.squareup.retrofit2:converter-gson:$versions.gson_converter"

deps.json = json

def test = [:]
//Required for unit testing
test.local = "junit:junit:$versions.junit_local_test"
//Core library
test.test_core = "androidx.test:core:$versions.test_core"

test.mockito_core = "org.mockito:mockito-core:$versions.mockito_core"
test.mockito_android = "org.mockito:mockito-android:$versions.mockito_core"
//Assertion
test.assertion_junit = "androidx.test.ext:junit:$versions.assertion_junit"
test.assertion_truth = "androidx.test.ext:truth:$versions.assertion_truth"
test.assertion_google_truth = "com.google.truth:truth:$versions.assertion_google_truth"
//Espresso dependencies
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso_test"
test.espresso_contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso_contrib"
test.espresso_acessibility = "androidx.test.espresso:espresso-accessibility:$versions.espresso_accessibilty"
test.espresso_web = "androidx.test.espresso:espresso-web:$versions.espresso_web"
test.espresso_idling = "androidx.test.espresso.idling:idling-concurrent:$versions.idling_concurrent"
test.espresso_idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso_idling_resource"
test.rule = "androidx.test:rules:$versions.test_rule"
//Required for instrumented tests
test.support_annotation = "androidx.annotation:annotation:$versions.support_annotations"
test.runner = "androidx.test:runner:$versions.runner"
test.hamcrest_library = "org.hamcrest:hamcrest-library:$versions.hamcrest_library"

deps.test = test

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutineCore"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutineCore"

deps.coroutines = coroutines

def rx = [:]
rx.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

deps.rx = rx







